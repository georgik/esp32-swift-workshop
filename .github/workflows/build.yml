name: Build ESP32-C6 Swift Workshop Projects

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build-mqtt-gateway:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [esp32-c6-mqtt-gateway]
      fail-fast: false

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set Target for ESP-IDF
        run: echo "TARGET=esp32c6" >> $GITHUB_ENV

      - name: ESP-IDF Build MQTT Gateway
        uses: espressif/esp-idf-ci-action@v1.1.0
        with:
          esp_idf_version: v5.2.2
          target: ${{ env.TARGET }}
          path: './${{ matrix.project }}'
          command: |
            idf.py set-target esp32c6 &&
            idf.py build &&
            cd build &&
            # Copy individual components for packaging
            cp bootloader/bootloader.bin ../bootloader-${{ matrix.project }}.bin &&
            cp partition_table/partition-table.bin ../partition-table-${{ matrix.project }}.bin &&
            cp ${{ matrix.project }}.bin ../
            # Create merged binary for ESP Launchpad
            #esptool.py --chip ${{ env.TARGET }} merge_bin -o ../${{ matrix.project }}-${{ github.event.inputs.version || 'dev' }}.bin "@flash_args"

      - name: Upload MQTT Gateway Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mqtt-gateway-build-${{ github.run_number }}
          path: |
            ${{ matrix.project }}/*.bin
            ${{ matrix.project }}/build/esp32-c6-mqtt-gateway.elf

  # Note: Swift build is commented out until ESP-IDF Swift support is stable in CI
  # build-swift-client:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       project: [esp32-c6-swift-client]
  #     fail-fast: false

  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v4

  #     - name: Install Swift for Embedded
  #       run: |
  #         # Install Swift toolchain with embedded support
  #         # This would need specific Swift development snapshot
  #         echo "Swift embedded build not yet stable in CI"

  #     - name: ESP-IDF Build Swift Client  
  #       uses: espressif/esp-idf-ci-action@v1.1.0
  #       with:
  #         esp_idf_version: v5.2.2
  #         target: esp32c6
  #         path: './${{ matrix.project }}'
  #         command: |
  #           idf.py set-target esp32c6 &&
  #           idf.py build

  validate-workshop-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Validate Workshop Documentation
        run: |
          # Check that all workshop assignments exist
          for assignment in introduction assignment-1 assignment-2 assignment-3 assignment-4 assignment-5; do
            if [ ! -d "doc/$assignment" ]; then
              echo "❌ Missing workshop assignment: doc/$assignment"
              exit 1
            fi
            if [ ! -f "doc/$assignment/index.md" ]; then
              echo "❌ Missing assignment content: doc/$assignment/index.md" 
              exit 1
            fi
            echo "✅ Found assignment: $assignment"
          done
          
          # Check main workshop index
          if [ ! -f "doc/_index.md" ]; then
            echo "❌ Missing main workshop index: doc/_index.md"
            exit 1
          fi
          echo "✅ Workshop documentation validation complete"

      - name: Validate Project Structure
        run: |
          # Check MQTT Gateway structure
          echo "Validating MQTT Gateway project structure..."
          if [ ! -f "esp32-c6-mqtt-gateway/CMakeLists.txt" ]; then
            echo "❌ Missing esp32-c6-mqtt-gateway/CMakeLists.txt"
            exit 1
          fi
          if [ ! -f "esp32-c6-mqtt-gateway/main/main.c" ]; then
            echo "❌ Missing esp32-c6-mqtt-gateway/main/main.c" 
            exit 1
          fi
          if [ ! -f "esp32-c6-mqtt-gateway/wokwi.toml" ]; then
            echo "❌ Missing esp32-c6-mqtt-gateway/wokwi.toml"
            exit 1
          fi
          echo "✅ MQTT Gateway project structure valid"

          # Check Swift Client structure  
          echo "Validating Swift Client project structure..."
          if [ ! -f "esp32-c6-swift-client/CMakeLists.txt" ]; then
            echo "❌ Missing esp32-c6-swift-client/CMakeLists.txt"
            exit 1
          fi
          if [ ! -f "esp32-c6-swift-client/main/Main.swift" ]; then
            echo "❌ Missing esp32-c6-swift-client/main/Main.swift"
            exit 1
          fi
          if [ ! -f "esp32-c6-swift-client/main/LedStrip.swift" ]; then
            echo "❌ Missing esp32-c6-swift-client/main/LedStrip.swift"
            exit 1
          fi
          if [ ! -f "esp32-c6-swift-client/wokwi.toml" ]; then
            echo "❌ Missing esp32-c6-swift-client/wokwi.toml"
            exit 1
          fi
          echo "✅ Swift Client project structure valid"

  wokwi-simulation-test:
    runs-on: ubuntu-latest
    needs: build-mqtt-gateway
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download MQTT Gateway Build
        uses: actions/download-artifact@v4
        with:
          name: mqtt-gateway-build-${{ github.run_number }}
          path: ./artifacts

      - name: Install Wokwi CLI
        run: |
          npm install -g @wokwi/cli
          wokwi --version

      - name: Test MQTT Gateway Simulation
        run: |
          cd esp32-c6-mqtt-gateway
          # Copy the built binary to expected location
          mkdir -p build
          cp ../artifacts/esp32-c6-mqtt-gateway.bin build/
          cp ../artifacts/esp32-c6-mqtt-gateway.elf build/ || true
          
          # Test Wokwi configuration
          if [ -f "wokwi.toml" ]; then
            echo "✅ Wokwi configuration found"
            # Run simulation for 10 seconds to validate it starts
            timeout 10s wokwi --timeout 10000 || true
            echo "✅ Wokwi simulation test completed"
          else
            echo "❌ Missing wokwi.toml configuration"
            exit 1
          fi